diff --git a/source_c/histogram.c b/source_c/histogram.c
index a45576d..4cc211f 100644
--- a/source_c/histogram.c
+++ b/source_c/histogram.c
@@ -18,6 +18,9 @@
  *   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 /*Author: Rainer Hegger. Last modified May 16, 2014*/
+/*Changes by Bjoern Bastian:
+    2014/05/16: option -r to set reference binning range
+*/
 
 #include <math.h>
 #include <limits.h>
@@ -26,17 +29,18 @@
 #include <string.h>
 #include "routines/tsa.h"
 
-#define WID_STR "Creates a histogram of a onedimensional dataset"
+#define WID_STR "Creates a histogram of a onedimensional dataset [2014/05/16: option -r added]"
 
 unsigned long length=ULONG_MAX;
+unsigned long minmaxlength=3;
 unsigned long base=50;
 unsigned long exclude=0;
 unsigned int column=1;
 unsigned int verbosity=0xff;
-double size;
 char my_stdout=1,gotsize=0,density=0;
 char *outfile=NULL;
 char *infile=NULL;
+char *minmaxfile=NULL;
 
 void show_options(char *progname)
 {
@@ -52,7 +56,8 @@ void show_options(char *progname)
   fprintf(stderr,"\t-b # of intervals [default %ld]\n",base);
   fprintf(stderr,"\t-D output densities not relative frequencies"
 	  " [default not set]\n");
-  fprintf(stderr,"\t-o output file [default 'datafile'.dat ;"
+  fprintf(stderr,"\t-r reference file for binning range [optional]\n");
+  fprintf(stderr,"\t-o output file [default 'datafile'.his ;"
 	  " If no -o is given: stdout]\n");
   fprintf(stderr,"\t-V verbosity level [default 1]\n\t\t"
           "0='only panic messages'\n\t\t"
@@ -77,6 +82,10 @@ void scan_options(int n,char **str)
     sscanf(out,"%u",&verbosity);
   if ((out=check_option(str,n,'D','n')) != NULL)
     density=1;
+  if ((out=check_option(str,n,'r','o')) != NULL) {
+    if (strlen(out) > 0)
+      minmaxfile=out;
+  }
   if ((out=check_option(str,n,'o','o')) != NULL) {
     my_stdout=0;
     if (strlen(out) > 0)
@@ -88,12 +97,13 @@ int main(int argc,char **argv)
 {
   char stdi=0;
   unsigned long i,j;
-  double x,norm,size=1.0,size2=1.0;
-  double min,max;
-  double *series;
+  unsigned long offset,negoffset,range;
+  double x,norm,size;
+  double min,interval,refmin,refinterval;
+  double *series,*minmax;
   double average,var;
   long *box;
-  FILE *fout;
+  FILE *fout,*test;
 
   if (scan_help(argc,argv))
     show_options(argv[0]);
@@ -122,29 +132,72 @@ int main(int argc,char **argv)
   if (!my_stdout)
     test_outfile(outfile);
 
+  /*Get reference range for option '-r'*/
+  if (minmaxfile != NULL) {
+    test=fopen(minmaxfile,"r");
+    if (test == NULL) {
+      fprintf(stderr,"File %s not found!\n",minmaxfile);
+      exit(HISTOGRAM__MINMAX_MISSING_OR_WRONG_FORMAT);
+    }
+    if (verbosity&VER_INPUT) {
+      fprintf(stderr,"Get reference range from %s, reading column %u\n",
+          minmaxfile,column);
+    }
+
+    minmax=(double*)get_series(minmaxfile,&minmaxlength,0,column,verbosity);
+    if(minmaxlength!=2) {
+      fprintf(stderr,"Wrong format in file '%s'. Needs exactly two lines"
+          " with minima and maxima for each column.\n",minmaxfile);
+      exit(HISTOGRAM__MINMAX_MISSING_OR_WRONG_FORMAT);
+    }
+    refmin=minmax[0];
+    refinterval=minmax[1]-refmin;
+  }
+
+  /*Read data*/
   series=(double*)get_series(infile,&length,exclude,column,verbosity);
   variance(series,length,&average,&var);
 
-  min=max=series[0];
+  /*Get data minimum and interval*/
+  min=interval=series[0];
   for (i=1;i<length;i++) {
     if (series[i] < min) min=series[i];
-    else if (series[i] > max) max=series[i];
+    else if (series[i] > interval) interval=series[i];
+  }
+  interval -= min;
+
+  /*Settings*/
+  if (minmaxfile != NULL) {
+    size=refinterval/base;
+    if (refmin > min) {
+      offset=(long)((refmin-min)/size);
+      negoffset=0;
+    }
+    else {
+      offset=0;
+      negoffset=(long)((min-refmin)/size);
+    }
+    range=(long)((min+interval-refmin)/size)+offset;
+  }
+  else {
+    refmin=min;
+    refinterval=interval;
+    size=interval/base;
+    offset=0;
+    negoffset=0;
+    range=base;
   }
-  max -= min;
-
-  for (i=0;i<length;i++)
-    series[i]=(series[i]-min);
 
-  if (base > 0) {
-    check_alloc(box=(long*)malloc(sizeof(long)*base));
-    for (i=0;i<base;i++)
+  /*Binning*/
+  if (range > 0) {
+    check_alloc(box=(long*)malloc(sizeof(long)*range));
+    for (i=negoffset;i<range;i++)
       box[i]=0;
-    size=1./base;
-    size2=(1.0-size/2.0)*max;
     for (i=0;i<length;i++) {
-      if (series[i] > size2)
-	series[i]=size2;
-      j=(long)(series[i]*base/max);
+      j=(long)((series[i]-refmin)*base/refinterval+offset);
+      if (j >= range) {
+        j=range-1;
+      }
       box[j]++;
     }
   }
@@ -152,30 +205,30 @@ int main(int argc,char **argv)
   if (!density)
     norm=1.0/(double)length;
   else
-    norm=1.0/(double)length*(double)base/max;
+    norm=1.0/(double)length/size;
 
   if (!my_stdout) {
     fout=fopen(outfile,"w");
     if (verbosity&VER_INPUT)
       fprintf(stderr,"Opened %s for writing\n",outfile);
-    fprintf(fout,"#interval of data: [%e:%e]\n",min,max+min);
+    fprintf(fout,"#interval of data: [%e:%e]\n",min,min+interval);
     fprintf(fout,"#average= %e\n",average);
     fprintf(fout,"#standard deviation= %e\n",var);
-    for (i=0;i<base;i++) {
-      x=(double)(i*size);
-      fprintf(fout,"%e %e\n",(x+size/2.0)*max+min,(double)box[i]*norm);
+    for (i=negoffset;i<range;i++) {
+      x=(double)(i*size-offset*size);
+      fprintf(fout,"%e %e\n",(x+size/2.0)+refmin,(double)box[i]*norm);
     }
     fclose(fout);
   }
   else {
     if (verbosity&VER_INPUT)
       fprintf(stderr,"Writing to stdout\n");
-    fprintf(stdout,"#interval of data: [%e:%e]\n",min,max+min);
+    fprintf(stdout,"#interval of data: [%e:%e]\n",min,min+interval);
     fprintf(stdout,"#average= %e\n",average);
     fprintf(stdout,"#standard deviation= %e\n",var);
-    for (i=0;i<base;i++) {
-      x=(double)(i*size);
-      fprintf(stdout,"%e %e\n",(x+size/2.0)*max+min,(double)box[i]*norm);
+    for (i=negoffset;i<range;i++) {
+      x=(double)(i*size-offset*size);
+      fprintf(stdout,"%e %e\n",(x+size/2.0)+refmin,(double)box[i]*norm);
       fflush(stdout);
     }
   }
diff --git a/source_c/routines/tisean_cec.h b/source_c/routines/tisean_cec.h
index b7c35be..325c3af 100644
--- a/source_c/routines/tisean_cec.h
+++ b/source_c/routines/tisean_cec.h
@@ -78,6 +78,7 @@
 #define DELAY_INCONS_m_M 80
 #define ONESTEP_TOO_FEW_POINTS 81
 #define MEM_SPEC_TOO_MANY_POLES 82
+#define HISTOGRAM__MINMAX_MISSING_OR_WRONG_FORMAT 90
 
 /* Global stuff */
 #define VECTOR_TOO_LARGE_FOR_LENGTH 100
